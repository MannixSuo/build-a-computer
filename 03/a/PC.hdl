// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
	// if reset or load or inc==0 go to the last else out[t+1] = out[t]
	Or(a=reset,b=load,out=resetOrLoad);
	Or(a=resetOrLoad,b=inc,out=resetOrLoadOrInc);
	// save the result+1 to plus1
	Inc16(in=lastOut,out=plus1);
	// if inc==1 incOut take the value from last cycles plus1
	Mux16(a=lastOut,b=plus1,sel=inc,out=incOut);
	//if load==1 take the value from input
	Mux16(a=incOut,b=in,sel=load,out=loadOut);
	// if reset==1 take the value 0
	Mux16(a=loadOut,b=false,sel=reset,out=resetOut);
	// output the resule and put it to next cycle as lastOut
	Register (in=resetOut,load=resetOrLoadOrInc,out=lastOut,out=out);
}
