class Node{
	field int xPosition,yPosition;
	field Node nextNode,previousNode;
	constructor Node new(int x,int y,Node next,Node pre){
	  let xPosition = x;
	  let yPosition = y;
	  let nextNode = next;
	  let previousNode = pre;
	  return this;
	}

	method Node next(){
		return nextNode;
	}

	method Node pre(){
		return previousNode;
	}

	method void draw(){
	  do Screen.setColor(true);
      do Screen.drawLine(510,0,510,210);
      do Screen.drawLine(0,210,510,210);
      do Screen.drawRectangle(xPosition, yPosition, xPosition + 10, yPosition + 10);
      return;
	}

	method void setNextNode(Node node){
      let nextNode = node;
      return;
	}

	method void setPreviousNode(Node node){
		let previousNode = node;
		return;
	}

	method boolean hasPrevious(){
		if(previousNode = null){return false;}
		return true;
	}

	method boolean hasNext(){
		if(nextNode = null){return false;}
		return true;
	}

	method int getXPosition(){
		return xPosition;
	}

	method int getYPosition(){
		return yPosition;
	}

	method void setX(int x){
		let xPosition = x;
		return;
	}

	method void setY(int y){
		let yPosition = y;
		return;
	}

	method void dispose() {
      	do Memory.deAlloc(this);
      	return;
   }

   method void disposeNext(){
   	if(~(nextNode = null)){
   	  do nextNode.dispose();
   	}
   	return;
   }
}